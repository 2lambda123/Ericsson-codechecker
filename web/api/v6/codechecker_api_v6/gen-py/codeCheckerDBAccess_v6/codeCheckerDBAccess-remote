#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from codeCheckerDBAccess_v6 import codeCheckerDBAccess
from codeCheckerDBAccess_v6.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  RunDataList getRunData(RunFilter runFilter, i64 limit, i64 offset)')
    print('  i64 getRunCount(RunFilter runFilter)')
    print('  string getCheckCommand(i64 runHistoryId, i64 runId)')
    print('  RunHistoryDataList getRunHistory( runIds, i64 limit, i64 offset, RunHistoryFilter runHistoryFilter)')
    print('  i64 getRunHistoryCount( runIds, RunHistoryFilter runHistoryFilter)')
    print('   getDiffResultsHash( runIds,  reportHashes, DiffType diffType,  skipDetectionStatuses)')
    print('  ReportData getReport(i64 reportId)')
    print('  ReportDataList getRunResults( runIds, i64 limit, i64 offset,  sortType, ReportFilter reportFilter, CompareData cmpData, bool getDetails)')
    print('  RunReportCounts getRunReportCounts( runIds, ReportFilter reportFilter, i64 limit, i64 offset)')
    print('  i64 getRunResultCount( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('  ReportDetails getReportDetails(i64 reportId)')
    print('  SourceFileData getSourceFileData(i64 fileId, bool fileContent, Encoding encoding)')
    print('   getLinesInSourceFileContents(LinesInFilesRequestedList linesInFilesRequested, Encoding encoding)')
    print('  bool isReviewStatusChangeDisabled()')
    print('  bool changeReviewStatus(i64 reportId, ReviewStatus status, string message)')
    print('  CommentDataList getComments(i64 reportId)')
    print('  i64 getCommentCount(i64 reportId)')
    print('  bool addComment(i64 reportId, CommentData comment)')
    print('  bool updateComment(i64 commentId, string newMessage)')
    print('  bool removeComment(i64 commentId)')
    print('  string getCheckerDoc(string checkerId)')
    print('  string getPackageVersion()')
    print('  bool removeRunResults( runIds)')
    print('  bool removeRunReports( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('  bool removeRun(i64 runId)')
    print('  string getSuppressFile()')
    print('   getSeverityCounts( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('   getCheckerMsgCounts( runIds, ReportFilter reportFilter, CompareData cmpData, i64 limit, i64 offset)')
    print('   getReviewStatusCounts( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('   getDetectionStatusCounts( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('   getFileCounts( runIds, ReportFilter reportFilter, CompareData cmpData, i64 limit, i64 offset)')
    print('  CheckerCounts getCheckerCounts( runIds, ReportFilter reportFilter, CompareData cmpData, i64 limit, i64 offset)')
    print('  RunTagCounts getRunHistoryTagCounts( runIds, ReportFilter reportFilter, CompareData cmpData)')
    print('  bool addSourceComponent(string name, string value, string description)')
    print('  SourceComponentDataList getSourceComponents( sourceComponentFilter)')
    print('  bool removeSourceComponent(string name)')
    print('   getMissingContentHashes( fileHashes)')
    print('  i64 massStoreRun(string runName, string tag, string version, string zipfile, bool force,  trimPathPrefixes)')
    print('  bool allowsStoringAnalysisStatistics()')
    print('   getAnalysisStatisticsLimits()')
    print('  bool storeAnalysisStatistics(string runName, string zipfile)')
    print('  AnalyzerStatisticsData getAnalysisStatistics(i64 runId, i64 runHistoryId)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = codeCheckerDBAccess.Client(protocol)
transport.open()

if cmd == 'getRunData':
    if len(args) != 3:
        print('getRunData requires 3 args')
        sys.exit(1)
    pp.pprint(client.getRunData(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getRunCount':
    if len(args) != 1:
        print('getRunCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.getRunCount(eval(args[0]),))

elif cmd == 'getCheckCommand':
    if len(args) != 2:
        print('getCheckCommand requires 2 args')
        sys.exit(1)
    pp.pprint(client.getCheckCommand(eval(args[0]), eval(args[1]),))

elif cmd == 'getRunHistory':
    if len(args) != 4:
        print('getRunHistory requires 4 args')
        sys.exit(1)
    pp.pprint(client.getRunHistory(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'getRunHistoryCount':
    if len(args) != 2:
        print('getRunHistoryCount requires 2 args')
        sys.exit(1)
    pp.pprint(client.getRunHistoryCount(eval(args[0]), eval(args[1]),))

elif cmd == 'getDiffResultsHash':
    if len(args) != 4:
        print('getDiffResultsHash requires 4 args')
        sys.exit(1)
    pp.pprint(client.getDiffResultsHash(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'getReport':
    if len(args) != 1:
        print('getReport requires 1 args')
        sys.exit(1)
    pp.pprint(client.getReport(eval(args[0]),))

elif cmd == 'getRunResults':
    if len(args) != 7:
        print('getRunResults requires 7 args')
        sys.exit(1)
    pp.pprint(client.getRunResults(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]), eval(args[5]), eval(args[6]),))

elif cmd == 'getRunReportCounts':
    if len(args) != 4:
        print('getRunReportCounts requires 4 args')
        sys.exit(1)
    pp.pprint(client.getRunReportCounts(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'getRunResultCount':
    if len(args) != 3:
        print('getRunResultCount requires 3 args')
        sys.exit(1)
    pp.pprint(client.getRunResultCount(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getReportDetails':
    if len(args) != 1:
        print('getReportDetails requires 1 args')
        sys.exit(1)
    pp.pprint(client.getReportDetails(eval(args[0]),))

elif cmd == 'getSourceFileData':
    if len(args) != 3:
        print('getSourceFileData requires 3 args')
        sys.exit(1)
    pp.pprint(client.getSourceFileData(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getLinesInSourceFileContents':
    if len(args) != 2:
        print('getLinesInSourceFileContents requires 2 args')
        sys.exit(1)
    pp.pprint(client.getLinesInSourceFileContents(eval(args[0]), eval(args[1]),))

elif cmd == 'isReviewStatusChangeDisabled':
    if len(args) != 0:
        print('isReviewStatusChangeDisabled requires 0 args')
        sys.exit(1)
    pp.pprint(client.isReviewStatusChangeDisabled())

elif cmd == 'changeReviewStatus':
    if len(args) != 3:
        print('changeReviewStatus requires 3 args')
        sys.exit(1)
    pp.pprint(client.changeReviewStatus(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'getComments':
    if len(args) != 1:
        print('getComments requires 1 args')
        sys.exit(1)
    pp.pprint(client.getComments(eval(args[0]),))

elif cmd == 'getCommentCount':
    if len(args) != 1:
        print('getCommentCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.getCommentCount(eval(args[0]),))

elif cmd == 'addComment':
    if len(args) != 2:
        print('addComment requires 2 args')
        sys.exit(1)
    pp.pprint(client.addComment(eval(args[0]), eval(args[1]),))

elif cmd == 'updateComment':
    if len(args) != 2:
        print('updateComment requires 2 args')
        sys.exit(1)
    pp.pprint(client.updateComment(eval(args[0]), args[1],))

elif cmd == 'removeComment':
    if len(args) != 1:
        print('removeComment requires 1 args')
        sys.exit(1)
    pp.pprint(client.removeComment(eval(args[0]),))

elif cmd == 'getCheckerDoc':
    if len(args) != 1:
        print('getCheckerDoc requires 1 args')
        sys.exit(1)
    pp.pprint(client.getCheckerDoc(args[0],))

elif cmd == 'getPackageVersion':
    if len(args) != 0:
        print('getPackageVersion requires 0 args')
        sys.exit(1)
    pp.pprint(client.getPackageVersion())

elif cmd == 'removeRunResults':
    if len(args) != 1:
        print('removeRunResults requires 1 args')
        sys.exit(1)
    pp.pprint(client.removeRunResults(eval(args[0]),))

elif cmd == 'removeRunReports':
    if len(args) != 3:
        print('removeRunReports requires 3 args')
        sys.exit(1)
    pp.pprint(client.removeRunReports(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'removeRun':
    if len(args) != 1:
        print('removeRun requires 1 args')
        sys.exit(1)
    pp.pprint(client.removeRun(eval(args[0]),))

elif cmd == 'getSuppressFile':
    if len(args) != 0:
        print('getSuppressFile requires 0 args')
        sys.exit(1)
    pp.pprint(client.getSuppressFile())

elif cmd == 'getSeverityCounts':
    if len(args) != 3:
        print('getSeverityCounts requires 3 args')
        sys.exit(1)
    pp.pprint(client.getSeverityCounts(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getCheckerMsgCounts':
    if len(args) != 5:
        print('getCheckerMsgCounts requires 5 args')
        sys.exit(1)
    pp.pprint(client.getCheckerMsgCounts(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'getReviewStatusCounts':
    if len(args) != 3:
        print('getReviewStatusCounts requires 3 args')
        sys.exit(1)
    pp.pprint(client.getReviewStatusCounts(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getDetectionStatusCounts':
    if len(args) != 3:
        print('getDetectionStatusCounts requires 3 args')
        sys.exit(1)
    pp.pprint(client.getDetectionStatusCounts(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'getFileCounts':
    if len(args) != 5:
        print('getFileCounts requires 5 args')
        sys.exit(1)
    pp.pprint(client.getFileCounts(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'getCheckerCounts':
    if len(args) != 5:
        print('getCheckerCounts requires 5 args')
        sys.exit(1)
    pp.pprint(client.getCheckerCounts(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'getRunHistoryTagCounts':
    if len(args) != 3:
        print('getRunHistoryTagCounts requires 3 args')
        sys.exit(1)
    pp.pprint(client.getRunHistoryTagCounts(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'addSourceComponent':
    if len(args) != 3:
        print('addSourceComponent requires 3 args')
        sys.exit(1)
    pp.pprint(client.addSourceComponent(args[0], args[1], args[2],))

elif cmd == 'getSourceComponents':
    if len(args) != 1:
        print('getSourceComponents requires 1 args')
        sys.exit(1)
    pp.pprint(client.getSourceComponents(eval(args[0]),))

elif cmd == 'removeSourceComponent':
    if len(args) != 1:
        print('removeSourceComponent requires 1 args')
        sys.exit(1)
    pp.pprint(client.removeSourceComponent(args[0],))

elif cmd == 'getMissingContentHashes':
    if len(args) != 1:
        print('getMissingContentHashes requires 1 args')
        sys.exit(1)
    pp.pprint(client.getMissingContentHashes(eval(args[0]),))

elif cmd == 'massStoreRun':
    if len(args) != 6:
        print('massStoreRun requires 6 args')
        sys.exit(1)
    pp.pprint(client.massStoreRun(args[0], args[1], args[2], args[3], eval(args[4]), eval(args[5]),))

elif cmd == 'allowsStoringAnalysisStatistics':
    if len(args) != 0:
        print('allowsStoringAnalysisStatistics requires 0 args')
        sys.exit(1)
    pp.pprint(client.allowsStoringAnalysisStatistics())

elif cmd == 'getAnalysisStatisticsLimits':
    if len(args) != 0:
        print('getAnalysisStatisticsLimits requires 0 args')
        sys.exit(1)
    pp.pprint(client.getAnalysisStatisticsLimits())

elif cmd == 'storeAnalysisStatistics':
    if len(args) != 2:
        print('storeAnalysisStatistics requires 2 args')
        sys.exit(1)
    pp.pprint(client.storeAnalysisStatistics(args[0], args[1],))

elif cmd == 'getAnalysisStatistics':
    if len(args) != 2:
        print('getAnalysisStatistics requires 2 args')
        sys.exit(1)
    pp.pprint(client.getAnalysisStatistics(eval(args[0]), eval(args[1]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
