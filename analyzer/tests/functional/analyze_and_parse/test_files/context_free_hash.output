NORMAL#CodeChecker log --output $LOGFILE$ --build "make context_hash" --quiet
NORMAL#CodeChecker analyze $LOGFILE$ --output $OUTPUT$ --report-hash=context-free --analyzers clang-tidy clangsa
NORMAL#CodeChecker parse $OUTPUT$ --print-steps
CHECK#CodeChecker check --build "make context_hash" --output $OUTPUT$ --quiet --print-steps --report-hash=context-free --analyzers clang-tidy clangsa
--------------------------------------------------------------------------------
[] - Starting build ...
[] - Build finished successfully.
[] - Starting static analysis ...
[] - [1/2] clangsa analyzed context_hash.cpp successfully.
[] - [2/2] clang-tidy analyzed context_hash.cpp successfully.
[] - ----==== Summary ====----
[] - Successfully analyzed
[] -   clangsa: 1
[] -   clang-tidy: 1
[] - Total analyzed compilation commands: 2
[] - ----=================----
[] - Analysis finished.
[] - To view results in the terminal use the "CodeChecker parse" command.
[] - To store results use the "CodeChecker store" command.
[] - See --help and the user guide for further options about parsing and storing the reports.
[] - ----=================----
[LOW] context_hash.cpp:8:3: Value stored to 'x' is never read [deadcode.DeadStores]
  x = 1;
  ^
  Report hash: 956cdff9afc6a5eca5478e218da0a3b2
  Steps:
    1, context_hash.cpp:8:3: Value stored to 'x' is never read

[LOW] context_hash.cpp:13:3: Value stored to 'x' is never read [deadcode.DeadStores]
  x = 1;
  ^
  Report hash: 956cdff9afc6a5eca5478e218da0a3b2
  Steps:
    1, context_hash.cpp:13:3: Value stored to 'x' is never read

[LOW] context_hash.cpp:19:3: Value stored to 'z' is never read [deadcode.DeadStores]
  z = 1;
  ^
  Report hash: 44ca8d5f4072148d92cfc3af541f1588
  Steps:
    1, context_hash.cpp:19:3: Value stored to 'z' is never read

[HIGH] context_hash.cpp:23:23: suspicious usage of 'sizeof(K)'; did you mean 'K'? [bugprone-sizeof-expression]
  std::memset(buf, 0, sizeof(BUFLEN));  // sizeof(42) ==> sizeof(int)
                      ^
  Report hash: 21edaae2826b623859de550d4d68ff0c
  Steps:
    1, context_hash.cpp:23:23: suspicious usage of 'sizeof(K)'; did you mean 'K'?

[HIGH] context_hash.cpp:34:23: suspicious usage of 'sizeof(K)'; did you mean 'K'? [bugprone-sizeof-expression]
  std::memset(buf, 0, sizeof(BUFLEN));  // sizeof(42) ==> sizeof(int)
                      ^
  Report hash: 21edaae2826b623859de550d4d68ff0c
  Steps:
    1, context_hash.cpp:34:23: suspicious usage of 'sizeof(K)'; did you mean 'K'?

[HIGH] context_hash.cpp:37:21: suspicious usage of 'sizeof(K)'; did you mean 'K'? [bugprone-sizeof-expression]
std::memset(buf, 0, sizeof(BUFLEN));  // sizeof(42) ==> sizeof(int)
                    ^
  Report hash: e68149020a8ecd03f0bc5421f9c036bb
  Steps:
    1, context_hash.cpp:37:21: suspicious usage of 'sizeof(K)'; did you mean 'K'?

Found 6 defect(s) in context_hash.cpp


----==== Summary ====----
-------------------------------
Filename         | Report count
-------------------------------
context_hash.cpp |            6
-------------------------------
-----------------------
Severity | Report count
-----------------------
HIGH     |            3
LOW      |            3
-----------------------
----=================----
Total number of reports: 6
----=================----
