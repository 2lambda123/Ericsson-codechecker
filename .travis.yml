language:
    - python

node_js: 10

services:
  - postgresql

jobs:
  include:
    - os: linux
      name: "Analyzer, web (sqlite, psycopg2, pg8000) and tools test cases."
      sudo: required
      dist: bionic
      python: "3.6"
      env: CC_MODULE=analyzer
    - os: linux
      name: "Server/client test cases (sqlite)"
      sudo: required
      dist: bionic
      python: "3.6"
      env: DATABASE=sqlite
    - os: linux
      name: "Server/client test cases (psycopg2)"
      sudo: required
      dist: bionic
      python: "3.6"
      env: DATABASE=psql_psycopg2
    - os: linux
      name: "Server/client test cases (pg8000)"
      sudo: required
      dist: bionic
      python: "3.6"
      env: DATABASE=psql_pg8000
    - os: linux
      name: "GUI test cases."
      sudo: required
      dist: bionic
      python: "3.6"
      services:
        - xvfb
      env:
        global:
          - MOZ_HEADLESS=1
      before_script:
        - "export DISPLAY=:99.0"
        - "export PATH=$TRAVIS_BUILD_DIR/build/CodeChecker/bin:$PATH"
      script: >
        make pip_dev_deps &&
        make clean_travis package &&
        npm run --prefix web/server/vue-cli test

install:

    # Remove clang symlinks from the travis base install.
    # The update-alternatives changes will not change the used clang version without this.
    # /usr/local is searched for clang binaries before the /usr/bin direcory.
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo rm -rf /usr/local/clang-*; fi

    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 9999; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 9999; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-11 9999; fi

    # Check if the right clang and clang-tidy is used
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then update-alternatives --display clang; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then update-alternatives --display clang++; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then update-alternatives --display clang-tidy; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then which clang++; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then which clang; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then which clang-tidy; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then clang++ --version; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then clang --version; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then clang-tidy --version; fi

# Run brew cleanup at before_cache stage otherwise, the cache will grow
# indefinitely as new package versions are released.
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

# Cache downloaded bottles (binary packages) to speed up our build process.
# See: https://stackoverflow.com/questions/39930171/cache-brew-builds-with-travis-ci
cache:
  directories:
    - $HOME/Library/Caches/Homebrew
    - $HOME/.cache/pip

addons:
    firefox: "69.0.1"
    chrome: stable
    apt:
        sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
            - sourceline: 'deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
            - g++-6
            - doxygen
            - gcc-multilib
            - libc6-dev-i386
            - libpq-dev
            - thrift-compiler
            - clang-11
            - clang-tidy-11
    postgresql: "9.6"

# We will create dist directory to skip installing npm packages and bundling
# the UI. UI specific job will use different script section in a separate job.
script:
    - >
      make pip_dev_deps &&
      make pycodestyle &&
      make pylint &&
      make clean_travis &&
      mkdir -p web/server/vue-cli/dist/dummy &&
      make package &&
      make -C tools/plist_to_html test &&
      make -C tools/report-converter package test &&
      make -C tools/codechecker_report_hash test &&
      if [[ "$CC_MODULE" = "analyzer" ]]; then
        BUILD_DIR=$TRAVIS_BUILD_DIR/build make -C analyzer \
          test_unit \
          test_functional \
          test_tu_collector \
          test_merge_clang_extdef_mappings \
          test_statistics_collector &&
        if [[ "$TRAVIS_OS_NAME" = "linux" ]]; then
          make -C analyzer test_build_logger
        fi
      elif [[ ! -z "$DATABASE" ]]; then
        make -C web test_matrix_${DATABASE}
      else
        make test
      fi
