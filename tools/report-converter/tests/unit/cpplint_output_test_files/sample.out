files/sample.cpp:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
files/sample.cpp:5:  Found C system header after C++ system header. Should be: sample.h, c system, c++ system, other.  [build/include_order] [4]
files/sample.cpp:10:  public: should be indented +1 space inside class Date  [whitespace/indent] [3]
files/sample.cpp:16:  Is this a non-const reference? If so, make const or use a pointer: vector<string>& v  [runtime/references] [2]
files/sample.cpp:17:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:41:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:42:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:42:  If/else bodies with multiple statements require braces  [readability/braces] [4]
files/sample.cpp:51:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:51:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:62:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:62:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:66:  public: should be indented +1 space inside class X  [whitespace/indent] [3]
files/sample.cpp:67:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:67:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:68:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:68:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
files/sample.cpp:76:  public: should be indented +1 space inside class X2  [whitespace/indent] [3]
files/sample.cpp:77:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:78:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:78:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
files/sample.cpp:82:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:82:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:86:  public: should be indented +1 space inside class X3  [whitespace/indent] [3]
files/sample.cpp:87:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [5]
files/sample.cpp:88:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:88:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
files/sample.cpp:96:  public: should be indented +1 space inside class Foo  [whitespace/indent] [3]
files/sample.cpp:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:112:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:113:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:113:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:115:  public: should be indented +1 space inside class Vector2  [whitespace/indent] [3]
files/sample.cpp:120:  Is this a non-const reference? If so, make const or use a pointer: N::X& a  [runtime/references] [2]
files/sample.cpp:120:  Is this a non-const reference? If so, make const or use a pointer: N::X& b  [runtime/references] [2]
files/sample.cpp:121:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:122:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:122:  Missing space after ,  [whitespace/comma] [3]
files/sample.cpp:124:  Weird number of spaces at line-start.  Are you using a 2-space indent?  [whitespace/indent] [3]
files/sample.cpp:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
files/sample.cpp:125:  Is this a non-const reference? If so, make const or use a pointer: N::X& a  [runtime/references] [2]
files/sample.cpp:125:  Is this a non-const reference? If so, make const or use a pointer: N::X& b  [runtime/references] [2]
files/sample.cpp:126:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:127:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:127:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:128:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:128:  Missing space after ,  [whitespace/comma] [3]
files/sample.cpp:145:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:146:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:151:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:152:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:157:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:158:  Missing spaces around =  [whitespace/operators] [4]
files/sample.cpp:164:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:166:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:168:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:170:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:173:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:173:  Do not use variable-length arrays.  Use an appropriately named ('k' followed by CamelCase) compile-time constant for the size.  [runtime/arrays] [1]
files/sample.cpp:177:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:180:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:180:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:180:  Static/global string variables are not permitted.  [runtime/string] [4]
files/sample.cpp:181:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:181:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:186:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:186:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:192:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:192:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:197:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:197:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:199:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:199:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:201:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]
files/sample.cpp:204:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]
files/sample.cpp:204:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]
files/sample.cpp:210:  Missing space before {  [whitespace/braces] [5]
files/sample.cpp:210:  Static/global string variables are not permitted.  [runtime/string] [4]
files/sample.cpp:211:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:211:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:216:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:219:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
files/sample.cpp:220:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:220:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:221:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:221:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:222:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:222:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:227:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:227:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:229:  Static/global string variables are not permitted.  [runtime/string] [4]
files/sample.cpp:230:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:230:  Using C-style cast.  Use reinterpret_cast<double*>(...) instead  [readability/casting] [4]
files/sample.cpp:238:  public: should be indented +1 space inside class derived2  [whitespace/indent] [3]
files/sample.cpp:243:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:245:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
files/sample.cpp:245:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:245:  Using C-style cast.  Use reinterpret_cast<derived2*>(...) instead  [readability/casting] [4]
files/sample.cpp:246:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
files/sample.cpp:246:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:255:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:256:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:259:  Tab found; better to use spaces  [whitespace/tab] [1]
files/sample.cpp:259:  At least two spaces is best between code and comments  [whitespace/comments] [2]
files/sample.cpp:262:  Empty loop bodies should use {} or continue  [whitespace/empty_loop_body] [5]
files/sample.cpp:262:  At least two spaces is best between code and comments  [whitespace/comments] [2]
Done processing files/sample.cpp
Total errors found: 107
